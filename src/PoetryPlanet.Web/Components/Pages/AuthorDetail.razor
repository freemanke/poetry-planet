@attribute [Route(Consts.RouterAuthorDetail)]

@inject ApplicationDbContext db
@inject DialogService DialogService

<PageTitle></PageTitle>

<RadzenStack class="mb-2">
    <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.H6">@entity.Name</RadzenText>
    <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.Body1">
        @entity.Dynasty · (@entity.BirthYear - @entity.DeathYear)
    </RadzenText>
    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="简介">
                <RadzenText TextStyle="TextStyle.Body2">@entity.Intro</RadzenText>
            </RadzenTabsItem>
            <RadzenTabsItem Text="维基百科">
                <a href="@entity.BaiduWiki">@entity.BaiduWiki</a>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</RadzenStack>
<RadzenStack AlignItems="AlignItems.Center">
    <RadzenButton Text="关闭" Click="@(()=>DialogService.Close())"></RadzenButton>
</RadzenStack>

@code
{
    [Parameter] public int Id { get; set; }
    private Author entity = new();

    protected override async Task OnInitializedAsync()
    {
        var find = await db.Authors.FirstOrDefaultAsync(a => a.Id == Id);
        if (find != null) entity = find;
    }

}
